{
  "contractName": "fronts_mp",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amountToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_storeOwnerAddress",
          "type": "address"
        }
      ],
      "name": "approveStoreByAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_adminAddress",
          "type": "address"
        }
      ],
      "name": "addNewAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStoreOwnerBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmins",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "transferAllFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUserType",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_store_name",
          "type": "string"
        }
      ],
      "name": "addNewStore",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_storeOwnerAddress",
          "type": "address"
        }
      ],
      "name": "getStoreByAddress",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storeOwnerAddresses",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "store_owner_balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllStoreAddresses",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "store_owners",
      "outputs": [
        {
          "name": "store_name",
          "type": "string"
        },
        {
          "name": "isApproved",
          "type": "bool"
        },
        {
          "name": "approvedBy",
          "type": "address"
        },
        {
          "name": "flag",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fronts",
      "outputs": [
        {
          "name": "front_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "frontCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxAmountCanWithdraw",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "store_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "front_name",
          "type": "string"
        }
      ],
      "name": "newStorefrontInserted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "store_owner",
          "type": "address"
        }
      ],
      "name": "emptyStoreFrontName",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "store_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "store_name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "emptyStoreNameEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "store_owner",
          "type": "address"
        }
      ],
      "name": "storeAlreadyExistEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "store_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "store_name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "newStoreApplicationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "store_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "store_name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "approveStoreApplicationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "storeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "amountWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addAdmin",
          "type": "address"
        }
      ],
      "name": "newAdminEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addAdmin",
          "type": "address"
        }
      ],
      "name": "adminAlreadyExistEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_front_name",
          "type": "string"
        }
      ],
      "name": "addStorefront",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_storeOwnerAddress",
          "type": "address"
        }
      ],
      "name": "getFrontCountByOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_storeOwnerAddress",
          "type": "address"
        },
        {
          "name": "_front_index",
          "type": "uint256"
        }
      ],
      "name": "getFrontDetailsByOwner",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d208061006d6000396000f30060806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630562b9f71461016457806306a66a0f146101915780630a1b10e1146101d45780630d518cfa146102175780631f0769221461026e57806331ae450b146102995780633b789750146103055780633f4ba83a1461035c578063419900771461037357806341c0e1b5146103ac578063429b62e5146103c35780635a5dae411461041e5780635c975abb1461048757806366ee5791146104b65780636f9fb98a146105b05780638269c96d146105db57806383c40450146106485780638456cb591461069f5780638da5cb5b146106b657806398330f971461070d578063a6b3616314610779578063b62991761461087e578063bf2c0f1214610944578063c03a3a2b1461099b578063f054bff7146109c6578063f272c7c614610a2f578063f2fde38b14610afc575b600080fd5b34801561017057600080fd5b5061018f60048036038101908080359060200190929190505050610b3f565b005b34801561019d57600080fd5b506101d2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da9565b005b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d2565b005b34801561022357600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611363565b6040518082815260200191505060405180910390f35b34801561027a57600080fd5b50610283611442565b6040518082815260200191505060405180910390f35b3480156102a557600080fd5b506102ae6114c3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f15780820151818401526020810190506102d6565b505050509050019250505060405180910390f35b34801561031157600080fd5b50610346600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611551565b6040518082815260200191505060405180910390f35b34801561036857600080fd5b50610371611601565b005b34801561037f57600080fd5b506103886116bf565b6040518082600381111561039857fe5b60ff16815260200191505060405180910390f35b3480156103b857600080fd5b506103c16117e0565b005b3480156103cf57600080fd5b50610404600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611875565b604051808215151515815260200191505060405180910390f35b34801561042a57600080fd5b50610485600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611895565b005b34801561049357600080fd5b5061049c611ddb565b604051808215151515815260200191505060405180910390f35b3480156104c257600080fd5b506104f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dee565b6040518080602001841515151581526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b83811015610573578082015181840152602081019050610558565b50505050905090810190601f1680156105a05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105bc57600080fd5b506105c5612044565b6040518082815260200191505060405180910390f35b3480156105e757600080fd5b50610606600480360381019080803590602001909291905050506120be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065457600080fd5b50610689600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120fc565b6040518082815260200191505060405180910390f35b3480156106ab57600080fd5b506106b4612114565b005b3480156106c257600080fd5b506106cb6121d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561071957600080fd5b506107226121f9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561076557808201518184015260208101905061074a565b505050509050019250505060405180910390f35b34801561078557600080fd5b506107ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612287565b6040518080602001851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b83811015610840578082015181840152602081019050610825565b50505050905090810190601f16801561086d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561088a57600080fd5b506108c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612389565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109095780820151818401526020810190506108ee565b50505050905090810190601f1680156109365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561095057600080fd5b50610985600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061244c565b6040518082815260200191505060405180910390f35b3480156109a757600080fd5b506109b0612464565b6040518082815260200191505060405180910390f35b3480156109d257600080fd5b50610a2d600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612529565b005b348015610a3b57600080fd5b50610a7a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612922565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610ac0578082015181840152602081019050610aa5565b50505050905090810190601f168015610aed5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610b0857600080fd5b50610b3d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ab7565b005b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff161515141515610ba157600080fd5b600060149054906101000a900460ff16151515610bbd57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff163110151515610be357600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610c3157600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1631813373ffffffffffffffffffffffffffffffffffffffff16310110158015610ca157503373ffffffffffffffffffffffffffffffffffffffff1631813373ffffffffffffffffffffffffffffffffffffffff16310311155b15610da65780600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d39573d6000803e3d6000fd5b507fb2f5d4c0f2ba5229a12fd1382c4e4a7de3abb1a36c6e9f17e123d90a555b61b33382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b50565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610e0857600080fd5b600060149054906101000a900460ff16151515610e2457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e6057600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610eb857600080fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690831515021790555033600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2d3b3f8ade3bae1b99cd0098d3cac1b37137c4e77f3d7e94cbb043b76c3dac1481600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016001604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001831515151581526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156110bf5780601f10611094576101008083540402835291602001916110bf565b820191906000526020600020905b8154815290600101906020018083116110a257829003601f168201915b505094505050505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561112d57600080fd5b600060149054906101000a900460ff1615151561114957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561118557600080fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561123f577f53d0035f6b28e97e97a51153d8a10195bb11195c78d4f1f54b90257dd4b5f24c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1611360565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060028190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f0c4e2d6b66bd305bcffd64765c550562e7aca7e57b5ac5f24a7ec8c64e7e5ab581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113a057600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615156113fb57600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615151415156114a657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1631905090565b6060600280548060200260200160405190810160405280929190818152602001828054801561154757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114fd575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115ae57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc6115d0612044565b9081150290604051600060405180830381858888f193505050501580156115fb573d6000803e3d6000fd5b50919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561165c57600080fd5b600060149054906101000a900460ff16151561167757600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561171f57600090506117dd565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561177a57600190506117dd565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff16156117d857600290506117dd565b600390505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561183b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60016020528060005260406000206000915054906101000a900460ff1681565b61189d612c0c565b600060149054906101000a900460ff161515156118b957600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615611976577fd9a560ebcdc6c61750193a7315305c8c055fd9089dea73669d29576bc3226f1e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1611dd7565b73__library_mp____________________________63ed1a54db836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119fc5780820151818401526020810190506119e1565b50505050905090810190601f168015611a295780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611a4657600080fd5b505af4158015611a5a573d6000803e3d6000fd5b505050506040513d6020811015611a7057600080fd5b810190808051906020019092919050505015611b68577f133715872e9b2882294ade7043576a1a8d1fb72bbb46e7c2264192ce5c3bcf5633836000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015611b27578082015181840152602081019050611b0c565b50505050905090810190601f168015611b545780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1611dd7565b608060405190810160405280838152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611c05929190612c4f565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160156101000a81548160ff021916908315150217905550905050600160053390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050507f903da21572f52b08472df8a78f74843a6ad06435b0b957f429b91e729106d74f33836000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015611d9a578082015181840152602081019050611d7f565b50505050905090810190601f168015611dc75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15b5050565b600060149054906101000a900460ff1681565b6060600080600060149054906101000a900460ff16151515611e0f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611e4b57600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff161515611ea657600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120305780601f1061200557610100808354040283529160200191612030565b820191906000526020600020905b81548152906001019060200180831161201357829003601f168201915b505050505092509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120a157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff1631905090565b6005818154811015156120cd57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561216f57600080fd5b600060149054906101000a900460ff1615151561218b57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600580548060200260200160405190810160405280929190818152602001828054801561227d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612233575b5050505050905090565b6003602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123335780601f1061230857610100808354040283529160200191612333565b820191906000526020600020905b81548152906001019060200180831161231657829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160159054906101000a900460ff16905084565b600660205281600052604060002060205280600052604060002060009150915050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124425780601f1061241757610100808354040283529160200191612442565b820191906000526020600020905b81548152906001019060200180831161242557829003601f168201915b5050505050905081565b60076020528060005260406000206000915090505481565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615151415156124c857600080fd5b600060149054906101000a900460ff161515156124e457600080fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff16151514151561258b57600080fd5b600060149054906101000a900460ff161515156125a757600080fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16151514151561260957600080fd5b73__library_mp____________________________63ed1a54db826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561268f578082015181840152602081019050612674565b50505050905090810190601f1680156126bc5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b1580156126d957600080fd5b505af41580156126ed573d6000803e3d6000fd5b505050506040513d602081101561270357600080fd5b810190808051906020019092919050505015612781577fb027bd50c74e62f2950b329db49ab3d625f22f621596c187c51cb21a75fe10f233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a161291f565b60206040519081016040528082815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558152602001908152602001600020600082015181600001908051906020019061284a929190612c4f565b509050507fa170d58d6ec782694dcb5a0be7079fe0339e825897c216add10ddbf0b2ddc4143382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128e35780820151818401526020810190506128c8565b50505050905090810190601f1680156129105780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15b50565b606060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561296157600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615156129bc57600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000183818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612aa55780601f10612a7a57610100808354040283529160200191612aa5565b820191906000526020600020905b815481529060010190602001808311612a8857829003601f168201915b50505050509150915091509250929050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612b1257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b4e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60806040519081016040528060608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c9057805160ff1916838001178555612cbe565b82800160010185558215612cbe579182015b82811115612cbd578251825591602001919060010190612ca2565b5b509050612ccb9190612ccf565b5090565b612cf191905b80821115612ced576000816000905550600101612cd5565b5090565b905600a165627a7a72305820dbbcb46b2b982ce09ff07078fdd8452a67baf76dea443fd515d91f82bd79cff90029",
  "deployedBytecode": "0x60806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630562b9f71461016457806306a66a0f146101915780630a1b10e1146101d45780630d518cfa146102175780631f0769221461026e57806331ae450b146102995780633b789750146103055780633f4ba83a1461035c578063419900771461037357806341c0e1b5146103ac578063429b62e5146103c35780635a5dae411461041e5780635c975abb1461048757806366ee5791146104b65780636f9fb98a146105b05780638269c96d146105db57806383c40450146106485780638456cb591461069f5780638da5cb5b146106b657806398330f971461070d578063a6b3616314610779578063b62991761461087e578063bf2c0f1214610944578063c03a3a2b1461099b578063f054bff7146109c6578063f272c7c614610a2f578063f2fde38b14610afc575b600080fd5b34801561017057600080fd5b5061018f60048036038101908080359060200190929190505050610b3f565b005b34801561019d57600080fd5b506101d2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da9565b005b3480156101e057600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d2565b005b34801561022357600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611363565b6040518082815260200191505060405180910390f35b34801561027a57600080fd5b50610283611442565b6040518082815260200191505060405180910390f35b3480156102a557600080fd5b506102ae6114c3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f15780820151818401526020810190506102d6565b505050509050019250505060405180910390f35b34801561031157600080fd5b50610346600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611551565b6040518082815260200191505060405180910390f35b34801561036857600080fd5b50610371611601565b005b34801561037f57600080fd5b506103886116bf565b6040518082600381111561039857fe5b60ff16815260200191505060405180910390f35b3480156103b857600080fd5b506103c16117e0565b005b3480156103cf57600080fd5b50610404600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611875565b604051808215151515815260200191505060405180910390f35b34801561042a57600080fd5b50610485600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611895565b005b34801561049357600080fd5b5061049c611ddb565b604051808215151515815260200191505060405180910390f35b3480156104c257600080fd5b506104f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dee565b6040518080602001841515151581526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b83811015610573578082015181840152602081019050610558565b50505050905090810190601f1680156105a05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105bc57600080fd5b506105c5612044565b6040518082815260200191505060405180910390f35b3480156105e757600080fd5b50610606600480360381019080803590602001909291905050506120be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065457600080fd5b50610689600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120fc565b6040518082815260200191505060405180910390f35b3480156106ab57600080fd5b506106b4612114565b005b3480156106c257600080fd5b506106cb6121d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561071957600080fd5b506107226121f9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561076557808201518184015260208101905061074a565b505050509050019250505060405180910390f35b34801561078557600080fd5b506107ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612287565b6040518080602001851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b83811015610840578082015181840152602081019050610825565b50505050905090810190601f16801561086d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561088a57600080fd5b506108c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612389565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109095780820151818401526020810190506108ee565b50505050905090810190601f1680156109365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561095057600080fd5b50610985600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061244c565b6040518082815260200191505060405180910390f35b3480156109a757600080fd5b506109b0612464565b6040518082815260200191505060405180910390f35b3480156109d257600080fd5b50610a2d600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612529565b005b348015610a3b57600080fd5b50610a7a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612922565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610ac0578082015181840152602081019050610aa5565b50505050905090810190601f168015610aed5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610b0857600080fd5b50610b3d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ab7565b005b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff161515141515610ba157600080fd5b600060149054906101000a900460ff16151515610bbd57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff163110151515610be357600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610c3157600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1631813373ffffffffffffffffffffffffffffffffffffffff16310110158015610ca157503373ffffffffffffffffffffffffffffffffffffffff1631813373ffffffffffffffffffffffffffffffffffffffff16310311155b15610da65780600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d39573d6000803e3d6000fd5b507fb2f5d4c0f2ba5229a12fd1382c4e4a7de3abb1a36c6e9f17e123d90a555b61b33382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b50565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515610e0857600080fd5b600060149054906101000a900460ff16151515610e2457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e6057600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610eb857600080fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690831515021790555033600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2d3b3f8ade3bae1b99cd0098d3cac1b37137c4e77f3d7e94cbb043b76c3dac1481600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016001604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001831515151581526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156110bf5780601f10611094576101008083540402835291602001916110bf565b820191906000526020600020905b8154815290600101906020018083116110a257829003601f168201915b505094505050505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561112d57600080fd5b600060149054906101000a900460ff1615151561114957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561118557600080fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561123f577f53d0035f6b28e97e97a51153d8a10195bb11195c78d4f1f54b90257dd4b5f24c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1611360565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060028190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f0c4e2d6b66bd305bcffd64765c550562e7aca7e57b5ac5f24a7ec8c64e7e5ab581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156113a057600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615156113fb57600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615151415156114a657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1631905090565b6060600280548060200260200160405190810160405280929190818152602001828054801561154757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114fd575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115ae57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc6115d0612044565b9081150290604051600060405180830381858888f193505050501580156115fb573d6000803e3d6000fd5b50919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561165c57600080fd5b600060149054906101000a900460ff16151561167757600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561171f57600090506117dd565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561177a57600190506117dd565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff16156117d857600290506117dd565b600390505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561183b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60016020528060005260406000206000915054906101000a900460ff1681565b61189d612c0c565b600060149054906101000a900460ff161515156118b957600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615611976577fd9a560ebcdc6c61750193a7315305c8c055fd9089dea73669d29576bc3226f1e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1611dd7565b73__library_mp____________________________63ed1a54db836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119fc5780820151818401526020810190506119e1565b50505050905090810190601f168015611a295780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611a4657600080fd5b505af4158015611a5a573d6000803e3d6000fd5b505050506040513d6020811015611a7057600080fd5b810190808051906020019092919050505015611b68577f133715872e9b2882294ade7043576a1a8d1fb72bbb46e7c2264192ce5c3bcf5633836000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015611b27578082015181840152602081019050611b0c565b50505050905090810190601f168015611b545780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1611dd7565b608060405190810160405280838152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611c05929190612c4f565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160156101000a81548160ff021916908315150217905550905050600160053390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050507f903da21572f52b08472df8a78f74843a6ad06435b0b957f429b91e729106d74f33836000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015611d9a578082015181840152602081019050611d7f565b50505050905090810190601f168015611dc75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15b5050565b600060149054906101000a900460ff1681565b6060600080600060149054906101000a900460ff16151515611e0f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611e4b57600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff161515611ea657600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120305780601f1061200557610100808354040283529160200191612030565b820191906000526020600020905b81548152906001019060200180831161201357829003601f168201915b505050505092509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120a157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff1631905090565b6005818154811015156120cd57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561216f57600080fd5b600060149054906101000a900460ff1615151561218b57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600580548060200260200160405190810160405280929190818152602001828054801561227d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612233575b5050505050905090565b6003602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123335780601f1061230857610100808354040283529160200191612333565b820191906000526020600020905b81548152906001019060200180831161231657829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160159054906101000a900460ff16905084565b600660205281600052604060002060205280600052604060002060009150915050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124425780601f1061241757610100808354040283529160200191612442565b820191906000526020600020905b81548152906001019060200180831161242557829003601f168201915b5050505050905081565b60076020528060005260406000206000915090505481565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615151415156124c857600080fd5b600060149054906101000a900460ff161515156124e457600080fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff16151514151561258b57600080fd5b600060149054906101000a900460ff161515156125a757600080fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16151514151561260957600080fd5b73__library_mp____________________________63ed1a54db826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561268f578082015181840152602081019050612674565b50505050905090810190601f1680156126bc5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b1580156126d957600080fd5b505af41580156126ed573d6000803e3d6000fd5b505050506040513d602081101561270357600080fd5b810190808051906020019092919050505015612781577fb027bd50c74e62f2950b329db49ab3d625f22f621596c187c51cb21a75fe10f233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a161291f565b60206040519081016040528082815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558152602001908152602001600020600082015181600001908051906020019061284a929190612c4f565b509050507fa170d58d6ec782694dcb5a0be7079fe0339e825897c216add10ddbf0b2ddc4143382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128e35780820151818401526020810190506128c8565b50505050905090810190601f1680156129105780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15b50565b606060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561296157600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff1615156129bc57600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000183818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612aa55780601f10612a7a57610100808354040283529160200191612aa5565b820191906000526020600020905b815481529060010190602001808311612a8857829003601f168201915b50505050509150915091509250929050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612b1257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b4e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60806040519081016040528060608152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c9057805160ff1916838001178555612cbe565b82800160010185558215612cbe579182015b82811115612cbd578251825591602001919060010190612ca2565b5b509050612ccb9190612ccf565b5090565b612cf191905b80821115612ced576000816000905550600101612cd5565b5090565b905600a165627a7a72305820dbbcb46b2b982ce09ff07078fdd8452a67baf76dea443fd515d91f82bd79cff90029",
  "sourceMap": "235:2463:4:-;;;310:5:1;289:26;;;;;;;;;;;;;;;;;;;;525:10:0;517:5;;:18;;;;;;;;;;;;;;;;;;235:2463:4;;;;;;",
  "deployedSourceMap": "235:2463:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5554:749:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5554:749:7;;;;;;;;;;;;;;;;;;;;;;;;;;4925:454;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4925:454:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:404:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;887:404:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1967:255:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1967:255:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6309:125:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6309:125:7;;;;;;;;;;;;;;;;;;;;;;;1800:88:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1800:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1800:88:3;;;;;;;;;;;;;;;;;1411:142:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1411:142:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:101:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:101:1;;;;;;7438:355:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7438:355:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:68:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:68:0;;;;;;610:39:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;610:39:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:941:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2484:941:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3830:381:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3830:381:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3830:381:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:111:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:111:0;;;;;;;;;;;;;;;;;;;;;;;1238:36:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1238:36:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:99:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;760:99:1;;;;;;266:20:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3517:108:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3517:108:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3517:108:7;;;;;;;;;;;;;;;;;986:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;986:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:57:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;643:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;643:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;753:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6962:149:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6962:149:7;;;;;;;;;;;;;;;;;;;;;;;1171:648:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1171:648:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2376:319:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2376:319:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:178:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;896:178:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5554:749:7;4759:4;4728:35;;:12;:24;4741:10;4728:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:35;;;4720:44;;;;;;;;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;5682:17:7;5665:4;5657:21;;;:42;;5649:51;;;;;;;;5755:17;5719:20;:32;5740:10;5719:32;;;;;;;;;;;;;;;;:53;;5711:62;;;;;;;;5889:10;5881:27;;;5860:17;5838:10;5830:27;;;:47;:78;;:161;;;;;5972:10;5964:27;;;5943:17;5921:10;5913:27;;;:47;:78;;5830:161;5827:469;;;6139:17;6103:20;:32;6124:10;6103:32;;;;;;;;;;;;;;;;:53;;;;;;;;;;;6179:10;6171:28;;:47;6200:17;6171:47;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6171:47:7;6238:46;6254:10;6266:17;6238:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;5827:469;5554:749;:::o;4925:454::-;1726:4:3;1704:26;;:6;:18;1711:10;1704:18;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;1696:35;;;;;;;;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;5062:1:7;5032:32;;:18;:32;;;;5024:41;;;;;;;;5084:6;:18;5091:10;5084:18;;;;;;;;;;;;;;;;;;;;;;;;;5076:27;;;;;;;;5187:4;5143:12;:32;5156:18;5143:32;;;;;;;;;;;;;;;:43;;;:48;;;;;;;;;;;;;;;;;;5246:10;5202:12;:32;5215:18;5202:32;;;;;;;;;;;;;;;:43;;;:54;;;;;;;;;;;;;;;;;;5272:99;5301:18;5321:12;:32;5334:18;5321:32;;;;;;;;;;;;;;;:43;;5366:4;5272:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4925:454;:::o;887:404:3:-;709:5:0;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;1011:1:3;986:27;;:13;:27;;;;978:36;;;;;;;;1028:6;:21;1035:13;1028:21;;;;;;;;;;;;;;;;;;;;;;;;;1025:125;;;1080:37;1103:13;1080:37;;;;;;;;;;;;;;;;;;;;;;1132:7;;1025:125;1194:4;1170:6;:21;1177:13;1170:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1209:10;1225:13;1209:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1209:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:28;1269:13;1255:28;;;;;;;;;;;;;;;;;;;;;;489:1:1;887:404:3;:::o;1967:255:4:-;2045:4;2100:1;2070:32;;:18;:32;;;;2062:41;;;;;;;;2122:12;:32;2135:18;2122:32;;;;;;;;;;;;;;;:43;;;;;;;;;;;;2114:52;;;;;;;;2184:10;:30;2195:18;2184:30;;;;;;;;;;;;;;;;2177:37;;1967:255;;;:::o;6309:125:7:-;6376:4;4759;4728:35;;:12;:24;4741:10;4728:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:35;;;4720:44;;;;;;;;6407:10;6399:27;;;6392:34;;6309:125;:::o;1800:88:3:-;1841:9;1870:10;1863:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:88;:::o;1411:142:0:-;1482:4;709:5;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;1504:10;1496:28;;:50;1525:20;:18;:20::i;:::-;1496:50;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1496:50:0;1411:142;;;:::o;952:101:1:-;709:5:0;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;645:6:1;;;;;;;;;;;637:15;;;;;;;;1017:5;1008:6;;:14;;;;;;;;;;;;;;;;;;1036:9;;;;;;;;;;952:101::o;7438:355:7:-;7485:9;7529:5;;;;;;;;;;;7515:19;;:10;:19;;;7512:68;;;7556:24;7549:31;;;;7512:68;7594:6;:18;7601:10;7594:18;;;;;;;;;;;;;;;;;;;;;;;;;7591:58;;;7634:15;7627:22;;;;7591:58;7663:12;:24;7676:10;7663:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;7660:125;;;7714:21;7707:28;;;;7660:125;7771:14;7764:21;;7438:355;;:::o;1167:68:0:-;709:5;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;1222:5;;;;;;;;;;;1209:19;;;610:39:3;;;;;;;;;;;;;;;;;;;;;;:::o;2484:941:7:-;3103:26;;:::i;:::-;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;2762:12:7;:24;2775:10;2762:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2759:121;;;2813:34;2836:10;2813:34;;;;;;;;;;;;;;;;;;;;;;2862:7;;2759:121;2950:10;:24;2975:11;2950:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2950:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2950:37:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2950:37:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2950:37:7;;;;;;;;;;;;;;;;2947:146;;;3009:51;3029:10;3041:11;3054:5;3009:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3009:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3075:7;;2947:146;3130:110;;;;;;;;;3154:11;3130:110;;;;3179:5;3130:110;;;;;;3224:1;3130:110;;;;;;3234:4;3130:110;;;;;3103:137;;3278:8;3251:12;:24;3264:10;3251:24;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3334:1;3297:19;3322:10;3297:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3297:36:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;3361:56;3386:10;3398:11;3411:5;3361:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3361:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1:1;2484:941:7;;:::o;289:26:1:-;;;;;;;;;;;;;:::o;3830:381:7:-;3919:6;3927:4;3933:7;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;3991:1:7;3961:32;;:18;:32;;;;3953:41;;;;;;;;4013:12;:32;4026:18;4013:32;;;;;;;;;;;;;;;:37;;;;;;;;;;;;4005:46;;;;;;;;4069:12;:32;4082:18;4069:32;;;;;;;;;;;;;;;:43;;4114:12;:32;4127:18;4114:32;;;;;;;;;;;;;;;:43;;;;;;;;;;;;4159:12;:32;4172:18;4159:32;;;;;;;;;;;;;;;:43;;;;;;;;;;;;4062:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3830:381;;;;;:::o;1295:111:0:-;1355:4;709:5;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;1386:4;1378:21;;;1371:28;;1295:111;:::o;1238:36:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1112:53::-;;;;;;;;;;;;;;;;;:::o;760:99:1:-;709:5:0;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;826:4;817:6;;:13;;;;;;;;;;;;;;;;;;844:7;;;;;;;;;;760:99::o;266:20:0:-;;;;;;;;;;;;;:::o;3517:108:7:-;3569:9;3598:19;3591:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3517:108;:::o;986:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;643:57:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;753:43::-;;;;;;;;;;;;;;;;;:::o;6962:149:7:-;7047:4;4759;4728:35;;:12;:24;4741:10;4728:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:35;;;4720:44;;;;;;;;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;7071:20:7;:32;7092:10;7071:32;;;;;;;;;;;;;;;;7064:39;;6962:149;:::o;1171:648:4:-;4759:4:7;4728:35;;:12;:24;4741:10;4728:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:35;;;4720:44;;;;;;;;473:6:1;;;;;;;;;;;472:7;464:16;;;;;;;;1364:4:4;1325:43;;:12;:24;1338:10;1325:24;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:43;;;1317:52;;;;;;;;1427:10;:24;1452:11;1427:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1427:37:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1427:37:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1427:37:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1427:37:4;;;;;;;;;;;;;;;;1424:135;;;1495:31;1515:10;1495:31;;;;;;;;;;;;;;;;;;;;;;1541:7;;1424:135;1717:32;;;;;;;;;1736:11;1717:32;;;1670:6;:18;1677:10;1670:18;;;;;;;;;;;;;;;:44;1689:10;:22;1700:10;1689:22;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1670:44;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1765:46;1787:10;1799:11;1765:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1765:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1:1;1171:648:4;:::o;2376:319::-;2475:6;2483:4;2543:1;2513:32;;:18;:32;;;;2505:41;;;;;;;;2565:12;:32;2578:18;2565:32;;;;;;;;;;;;;;;:37;;;;;;;;;;;;2557:46;;;;;;;;2621:6;:26;2628:18;2621:26;;;;;;;;;;;;;;;:40;2648:12;2621:40;;;;;;;;;;;:51;;2674:12;2614:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:319;;;;;:::o;896:178:0:-;709:5;;;;;;;;;;;695:19;;:10;:19;;;687:28;;;;;;;;993:1;973:22;;:8;:22;;;;965:31;;;;;;;;1036:8;1008:37;;1029:5;;;;;;;;;;;1008:37;;;;;;;;;;;;1060:8;1052:5;;:16;;;;;;;;;;;;;;;;;;896:178;:::o;235:2463:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport './stores_mp.sol';\r\n/**\r\n * author: Rajenda Maharjan\r\n * @title fronts_mp\r\n * @dev The fronts_mp contract is for all fronts and inherits the store. It has Front struct, add new fronts method().\r\n */\r\ncontract fronts_mp is stores_mp {\r\n    /**\r\n    * @dev using SafeMath\r\n    */\r\n    using SafeMath for uint256;\r\n    /**\r\n    * @dev Sturct for fronts. \r\n    * It might be only one variable for now but can be extend later front_name is Store front name\r\n    */\r\n    struct Front {\r\n        string front_name;\r\n    }\r\n    \r\n    //Mapping variable for store fronts: store owner => front id => Front struct\r\n    mapping (address => mapping(uint => Front)) public fronts;\r\n    //Mapping variable for store front count\r\n    mapping (address => uint) public frontCount;\r\n\r\n    //Event for new store front inserted\r\n    event newStorefrontInserted(address store_owner, string front_name);\r\n    //Event for Empty StoreFront Name\r\n    event emptyStoreFrontName(address store_owner);\r\n    /**\r\n     * @dev To add new store front. Only store owner can add their store fronts \r\n     * parameter: store front Name\r\n     * pausable: Yes\r\n     */\r\n    function addStorefront(string _front_name) public onlyStoreOwner whenNotPaused {\r\n        //Check Storeowner is approved by admin or not\r\n        require(store_owners[msg.sender].isApproved == true);\r\n        //check storefront is empty or not\r\n        if(library_mp.IsEmptyString(_front_name))\r\n        {\r\n            emit emptyStoreFrontName(msg.sender);\r\n            return;\r\n        }\r\n        //check storefront is duplicate or not: check this only from frontend to avoid looping here\r\n        fronts[msg.sender][frontCount[msg.sender]++] = Front({front_name: _front_name});\r\n        emit newStorefrontInserted(msg.sender, _front_name);\r\n    }\r\n    /**\r\n     * @dev To get store owner front count. Accessible for all\r\n     * parameter: store owner address\r\n     * pausable: No\r\n     */\r\n    function getFrontCountByOwner(address _storeOwnerAddress) public view returns(uint) {\r\n        require(_storeOwnerAddress != address(0));\r\n        require(store_owners[_storeOwnerAddress].isApproved);\r\n        return frontCount[_storeOwnerAddress];\r\n    }\r\n    /**\r\n     * @dev To get store front details. Accessible for all\r\n     * parameter: store owner address, front_id\r\n     * pausable: No\r\n     */\r\n    function getFrontDetailsByOwner(address _storeOwnerAddress, uint _front_index) public view returns(string, uint)\r\n    {\r\n        require(_storeOwnerAddress != address(0));\r\n        require(store_owners[_storeOwnerAddress].flag);\r\n        return(fronts[_storeOwnerAddress][_front_index].front_name, _front_index);\r\n    }\r\n}",
  "sourcePath": "I:\\test\\rajmahar_mp1\\marketplace\\contracts\\fronts_mp.sol",
  "ast": {
    "absolutePath": "/I/test/rajmahar_mp1/marketplace/contracts/fronts_mp.sol",
    "exportedSymbols": {
      "fronts_mp": [
        485
      ]
    },
    "id": 486,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 339,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/I/test/rajmahar_mp1/marketplace/contracts/stores_mp.sol",
        "file": "./stores_mp.sol",
        "id": 340,
        "nodeType": "ImportDirective",
        "scope": 486,
        "sourceUnit": 1755,
        "src": "28:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 341,
              "name": "stores_mp",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1754,
              "src": "257:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_stores_mp_$1754",
                "typeString": "contract stores_mp"
              }
            },
            "id": 342,
            "nodeType": "InheritanceSpecifier",
            "src": "257:9:4"
          }
        ],
        "contractDependencies": [
          96,
          156,
          337,
          1754
        ],
        "contractKind": "contract",
        "documentation": "author: Rajenda Maharjan\r\n@title fronts_mp\r\n@dev The fronts_mp contract is for all fronts and inherits the store. It has Front struct, add new fronts method().\r",
        "fullyImplemented": true,
        "id": 485,
        "linearizedBaseContracts": [
          485,
          1754,
          337,
          156,
          96
        ],
        "name": "fronts_mp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 345,
            "libraryName": {
              "contractScope": null,
              "id": 343,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 250,
              "src": "324:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$250",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "318:27:4",
            "typeName": {
              "id": 344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "337:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "fronts_mp.Front",
            "id": 348,
            "members": [
              {
                "constant": false,
                "id": 347,
                "name": "front_name",
                "nodeType": "VariableDeclaration",
                "scope": 348,
                "src": "524:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 346,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "524:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Front",
            "nodeType": "StructDefinition",
            "scope": 485,
            "src": "500:49:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 354,
            "name": "fronts",
            "nodeType": "VariableDeclaration",
            "scope": 485,
            "src": "643:57:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front))"
            },
            "typeName": {
              "id": 353,
              "keyType": {
                "id": 349,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "652:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "643:43:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front))"
              },
              "valueType": {
                "id": 352,
                "keyType": {
                  "id": 350,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "663:22:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$",
                  "typeString": "mapping(uint256 => struct fronts_mp.Front)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 351,
                  "name": "Front",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 348,
                  "src": "679:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Front_$348_storage_ptr",
                    "typeString": "struct fronts_mp.Front"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 358,
            "name": "frontCount",
            "nodeType": "VariableDeclaration",
            "scope": 485,
            "src": "753:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 357,
              "keyType": {
                "id": 355,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "762:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "753:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 356,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "773:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 364,
            "name": "newStorefrontInserted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "indexed": false,
                  "name": "store_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "875:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "indexed": false,
                  "name": "front_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "896:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:40:4"
            },
            "src": "847:68:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 368,
            "name": "emptyStoreFrontName",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "indexed": false,
                  "name": "store_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "986:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "985:21:4"
            },
            "src": "960:47:4"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "1250:569:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 378,
                              "name": "store_owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1382,
                              "src": "1325:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StoreOwner_$1378_storage_$",
                                "typeString": "mapping(address => struct stores_mp.StoreOwner storage ref)"
                              }
                            },
                            "id": 381,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 379,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1769,
                                "src": "1338:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1338:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1325:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StoreOwner_$1378_storage",
                              "typeString": "struct stores_mp.StoreOwner storage ref"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1373,
                          "src": "1325:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1364:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1325:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "1317:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:52:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "_front_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "1452:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "library_mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "1427:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_library_mp_$513_$",
                          "typeString": "type(library library_mp)"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "IsEmptyString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 512,
                      "src": "1427:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) pure returns (bool)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 398,
                  "nodeType": "IfStatement",
                  "src": "1424:135:4",
                  "trueBody": {
                    "id": 397,
                    "nodeType": "Block",
                    "src": "1475:84:4",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 392,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1769,
                                "src": "1515:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1515:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 391,
                            "name": "emptyStoreFrontName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "1495:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 395,
                        "nodeType": "EmitStatement",
                        "src": "1490:36:4"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 376,
                        "id": 396,
                        "nodeType": "Return",
                        "src": "1541:7:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "fronts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "1670:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front storage ref))"
                          }
                        },
                        "id": 407,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 400,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1769,
                            "src": "1677:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1677:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1670:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$",
                          "typeString": "mapping(uint256 => struct fronts_mp.Front storage ref)"
                        }
                      },
                      "id": 408,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1689:24:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 402,
                            "name": "frontCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "1689:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1769,
                              "src": "1700:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1700:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1689:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1670:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Front_$348_storage",
                        "typeString": "struct fronts_mp.Front storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 410,
                          "name": "_front_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "1736:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "Front",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1717:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Front_$348_storage_ptr_$",
                          "typeString": "type(struct fronts_mp.Front storage pointer)"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "front_name"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1717:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Front_$348_memory",
                        "typeString": "struct fronts_mp.Front memory"
                      }
                    },
                    "src": "1670:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Front_$348_storage",
                      "typeString": "struct fronts_mp.Front storage ref"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:79:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 415,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "1787:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1787:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 417,
                        "name": "_front_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "1799:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 414,
                      "name": "newStorefrontInserted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "1765:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "EmitStatement",
                  "src": "1760:51:4"
                }
              ]
            },
            "documentation": "@dev To add new store front. Only store owner can add their store fronts \r\nparameter: store front Name\r\npausable: Yes\r",
            "id": 421,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 373,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 372,
                  "name": "onlyStoreOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1558,
                  "src": "1221:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1221:14:4"
              },
              {
                "arguments": null,
                "id": 375,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 117,
                  "src": "1236:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1236:13:4"
              }
            ],
            "name": "addStorefront",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "_front_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "1194:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:20:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:0:4"
            },
            "scope": 485,
            "src": "1171:648:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "2051:171:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "_storeOwnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2070:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2100:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2092:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2092:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2070:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2062:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2062:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 437,
                            "name": "store_owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "2122:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StoreOwner_$1378_storage_$",
                              "typeString": "mapping(address => struct stores_mp.StoreOwner storage ref)"
                            }
                          },
                          "id": 439,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 438,
                            "name": "_storeOwnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2135:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2122:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StoreOwner_$1378_storage",
                            "typeString": "struct stores_mp.StoreOwner storage ref"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isApproved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "2122:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2114:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "frontCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "2184:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 445,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "_storeOwnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "2195:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2184:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 427,
                  "id": 446,
                  "nodeType": "Return",
                  "src": "2177:37:4"
                }
              ]
            },
            "documentation": "@dev To get store owner front count. Accessible for all\r\nparameter: store owner address\r\npausable: No\r",
            "id": 448,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFrontCountByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "_storeOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "1997:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1996:28:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "2045:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2044:6:4"
            },
            "scope": 485,
            "src": "1967:255:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "2494:201:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "_storeOwnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "2513:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2543:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2535:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2513:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2505:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 468,
                            "name": "store_owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "2565:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StoreOwner_$1378_storage_$",
                              "typeString": "mapping(address => struct stores_mp.StoreOwner storage ref)"
                            }
                          },
                          "id": 470,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "_storeOwnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "2578:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2565:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StoreOwner_$1378_storage",
                            "typeString": "struct stores_mp.StoreOwner storage ref"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flag",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1377,
                        "src": "2565:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2557:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 474,
                              "name": "fronts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 354,
                              "src": "2621:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front storage ref))"
                              }
                            },
                            "id": 476,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 475,
                              "name": "_storeOwnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "2628:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2621:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$",
                              "typeString": "mapping(uint256 => struct fronts_mp.Front storage ref)"
                            }
                          },
                          "id": 478,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 477,
                            "name": "_front_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 452,
                            "src": "2648:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2621:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Front_$348_storage",
                            "typeString": "struct fronts_mp.Front storage ref"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "front_name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 347,
                        "src": "2621:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_front_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "2674:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 481,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2620:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,uint256)"
                    }
                  },
                  "functionReturnParameters": 458,
                  "id": 482,
                  "nodeType": "Return",
                  "src": "2614:73:4"
                }
              ]
            },
            "documentation": "@dev To get store front details. Accessible for all\r\nparameter: store owner address, front_id\r\npausable: No\r",
            "id": 484,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFrontDetailsByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "name": "_storeOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2408:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "_front_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2436:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2407:47:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2475:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2483:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2483:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2474:14:4"
            },
            "scope": 485,
            "src": "2376:319:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 486,
        "src": "235:2463:4"
      }
    ],
    "src": "0:2698:4"
  },
  "legacyAST": {
    "absolutePath": "/I/test/rajmahar_mp1/marketplace/contracts/fronts_mp.sol",
    "exportedSymbols": {
      "fronts_mp": [
        485
      ]
    },
    "id": 486,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 339,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/I/test/rajmahar_mp1/marketplace/contracts/stores_mp.sol",
        "file": "./stores_mp.sol",
        "id": 340,
        "nodeType": "ImportDirective",
        "scope": 486,
        "sourceUnit": 1755,
        "src": "28:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 341,
              "name": "stores_mp",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1754,
              "src": "257:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_stores_mp_$1754",
                "typeString": "contract stores_mp"
              }
            },
            "id": 342,
            "nodeType": "InheritanceSpecifier",
            "src": "257:9:4"
          }
        ],
        "contractDependencies": [
          96,
          156,
          337,
          1754
        ],
        "contractKind": "contract",
        "documentation": "author: Rajenda Maharjan\r\n@title fronts_mp\r\n@dev The fronts_mp contract is for all fronts and inherits the store. It has Front struct, add new fronts method().\r",
        "fullyImplemented": true,
        "id": 485,
        "linearizedBaseContracts": [
          485,
          1754,
          337,
          156,
          96
        ],
        "name": "fronts_mp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 345,
            "libraryName": {
              "contractScope": null,
              "id": 343,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 250,
              "src": "324:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$250",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "318:27:4",
            "typeName": {
              "id": 344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "337:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "fronts_mp.Front",
            "id": 348,
            "members": [
              {
                "constant": false,
                "id": 347,
                "name": "front_name",
                "nodeType": "VariableDeclaration",
                "scope": 348,
                "src": "524:17:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 346,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "524:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Front",
            "nodeType": "StructDefinition",
            "scope": 485,
            "src": "500:49:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 354,
            "name": "fronts",
            "nodeType": "VariableDeclaration",
            "scope": 485,
            "src": "643:57:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front))"
            },
            "typeName": {
              "id": 353,
              "keyType": {
                "id": 349,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "652:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "643:43:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front))"
              },
              "valueType": {
                "id": 352,
                "keyType": {
                  "id": 350,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "663:22:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$",
                  "typeString": "mapping(uint256 => struct fronts_mp.Front)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 351,
                  "name": "Front",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 348,
                  "src": "679:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Front_$348_storage_ptr",
                    "typeString": "struct fronts_mp.Front"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 358,
            "name": "frontCount",
            "nodeType": "VariableDeclaration",
            "scope": 485,
            "src": "753:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 357,
              "keyType": {
                "id": 355,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "762:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "753:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 356,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "773:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 364,
            "name": "newStorefrontInserted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "indexed": false,
                  "name": "store_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "875:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "indexed": false,
                  "name": "front_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "896:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:40:4"
            },
            "src": "847:68:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 368,
            "name": "emptyStoreFrontName",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "indexed": false,
                  "name": "store_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "986:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "985:21:4"
            },
            "src": "960:47:4"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "1250:569:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 378,
                              "name": "store_owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1382,
                              "src": "1325:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StoreOwner_$1378_storage_$",
                                "typeString": "mapping(address => struct stores_mp.StoreOwner storage ref)"
                              }
                            },
                            "id": 381,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 379,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1769,
                                "src": "1338:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1338:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1325:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StoreOwner_$1378_storage",
                              "typeString": "struct stores_mp.StoreOwner storage ref"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1373,
                          "src": "1325:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1364:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1325:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "1317:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:52:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "_front_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "1452:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "library_mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "1427:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_library_mp_$513_$",
                          "typeString": "type(library library_mp)"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "IsEmptyString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 512,
                      "src": "1427:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) pure returns (bool)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 398,
                  "nodeType": "IfStatement",
                  "src": "1424:135:4",
                  "trueBody": {
                    "id": 397,
                    "nodeType": "Block",
                    "src": "1475:84:4",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 392,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1769,
                                "src": "1515:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1515:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 391,
                            "name": "emptyStoreFrontName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "1495:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 395,
                        "nodeType": "EmitStatement",
                        "src": "1490:36:4"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 376,
                        "id": 396,
                        "nodeType": "Return",
                        "src": "1541:7:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "fronts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "1670:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front storage ref))"
                          }
                        },
                        "id": 407,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 400,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1769,
                            "src": "1677:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1677:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1670:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$",
                          "typeString": "mapping(uint256 => struct fronts_mp.Front storage ref)"
                        }
                      },
                      "id": 408,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1689:24:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 402,
                            "name": "frontCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "1689:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1769,
                              "src": "1700:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1700:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1689:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1670:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Front_$348_storage",
                        "typeString": "struct fronts_mp.Front storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 410,
                          "name": "_front_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "1736:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "Front",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "1717:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Front_$348_storage_ptr_$",
                          "typeString": "type(struct fronts_mp.Front storage pointer)"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "front_name"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1717:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Front_$348_memory",
                        "typeString": "struct fronts_mp.Front memory"
                      }
                    },
                    "src": "1670:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Front_$348_storage",
                      "typeString": "struct fronts_mp.Front storage ref"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:79:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 415,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "1787:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1787:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 417,
                        "name": "_front_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "1799:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 414,
                      "name": "newStorefrontInserted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "1765:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "EmitStatement",
                  "src": "1760:51:4"
                }
              ]
            },
            "documentation": "@dev To add new store front. Only store owner can add their store fronts \r\nparameter: store front Name\r\npausable: Yes\r",
            "id": 421,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 373,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 372,
                  "name": "onlyStoreOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1558,
                  "src": "1221:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1221:14:4"
              },
              {
                "arguments": null,
                "id": 375,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 117,
                  "src": "1236:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1236:13:4"
              }
            ],
            "name": "addStorefront",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "_front_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "1194:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:20:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:0:4"
            },
            "scope": 485,
            "src": "1171:648:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "2051:171:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "_storeOwnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "2070:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2100:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2092:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2092:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2070:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2062:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2062:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 437,
                            "name": "store_owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "2122:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StoreOwner_$1378_storage_$",
                              "typeString": "mapping(address => struct stores_mp.StoreOwner storage ref)"
                            }
                          },
                          "id": 439,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 438,
                            "name": "_storeOwnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2135:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2122:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StoreOwner_$1378_storage",
                            "typeString": "struct stores_mp.StoreOwner storage ref"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isApproved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "2122:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2114:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:52:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "frontCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "2184:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 445,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "_storeOwnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "2195:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2184:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 427,
                  "id": 446,
                  "nodeType": "Return",
                  "src": "2177:37:4"
                }
              ]
            },
            "documentation": "@dev To get store owner front count. Accessible for all\r\nparameter: store owner address\r\npausable: No\r",
            "id": 448,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFrontCountByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "_storeOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "1997:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1996:28:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "2045:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2044:6:4"
            },
            "scope": 485,
            "src": "1967:255:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "2494:201:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "_storeOwnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "2513:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2543:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2535:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2513:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2505:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 468,
                            "name": "store_owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "2565:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StoreOwner_$1378_storage_$",
                              "typeString": "mapping(address => struct stores_mp.StoreOwner storage ref)"
                            }
                          },
                          "id": 470,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "_storeOwnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "2578:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2565:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StoreOwner_$1378_storage",
                            "typeString": "struct stores_mp.StoreOwner storage ref"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flag",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1377,
                        "src": "2565:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1772,
                        1773
                      ],
                      "referencedDeclaration": 1772,
                      "src": "2557:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 474,
                              "name": "fronts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 354,
                              "src": "2621:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct fronts_mp.Front storage ref))"
                              }
                            },
                            "id": 476,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 475,
                              "name": "_storeOwnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "2628:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2621:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Front_$348_storage_$",
                              "typeString": "mapping(uint256 => struct fronts_mp.Front storage ref)"
                            }
                          },
                          "id": 478,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 477,
                            "name": "_front_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 452,
                            "src": "2648:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2621:40:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Front_$348_storage",
                            "typeString": "struct fronts_mp.Front storage ref"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "front_name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 347,
                        "src": "2621:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "_front_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "2674:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 481,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2620:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,uint256)"
                    }
                  },
                  "functionReturnParameters": 458,
                  "id": 482,
                  "nodeType": "Return",
                  "src": "2614:73:4"
                }
              ]
            },
            "documentation": "@dev To get store front details. Accessible for all\r\nparameter: store owner address, front_id\r\npausable: No\r",
            "id": 484,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFrontDetailsByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "name": "_storeOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2408:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "_front_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2436:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2407:47:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2475:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "2483:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2483:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2474:14:4"
            },
            "scope": 485,
            "src": "2376:319:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 486,
        "src": "235:2463:4"
      }
    ],
    "src": "0:2698:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1533435979653": {
      "events": {},
      "links": {},
      "address": "0x0e47fa30b351f72afe15c966121ea0e60695d84c",
      "transactionHash": "0x410c7c6b8025c8a367498c47f65f37db0ce8b08aa147e648fdb1b5438714070b"
    },
    "1534536519803": {
      "events": {},
      "links": {
        "library_mp": "0x9288319e5b82702d2de20955783b347cf74921ed"
      },
      "address": "0x9b28a93016507fbedaacb35a861db945f28717de",
      "transactionHash": "0xcb76e16cfcd58edf1137fc9c2ef87a0fe2efacfd27f39e74eda90b410545f454"
    },
    "1534612922218": {
      "events": {},
      "links": {
        "library_mp": "0xb8594ebc27f7686bf71e0051ef13a01257f25715"
      },
      "address": "0x98c29d372a961468d0a0d0e1c67555ac1b8ab09f",
      "transactionHash": "0x6f09608d6cb9ae2b6a6497a4ec9a69d416bbcd2167ac16de0e208e5b2590dfe8"
    },
    "1534651140492": {
      "events": {},
      "links": {
        "library_mp": "0x8b4c017770d5822830303ce16d765a67f070a1eb"
      },
      "address": "0x5b630a547bf18979e039a6e844ac7f6f3151eb86",
      "transactionHash": "0xb21188aaf205362af5ade7753ffc9a274bed8289d7c8ffcf35313bbc48b0b34e"
    },
    "1534694887663": {
      "events": {},
      "links": {
        "library_mp": "0x8b4c017770d5822830303ce16d765a67f070a1eb"
      },
      "address": "0x5b630a547bf18979e039a6e844ac7f6f3151eb86",
      "transactionHash": "0x0fec382568099e6a87f5d8a60dcc3ba21d7356f285d81fa6726dc483c2d01b3b"
    },
    "1534718348150": {
      "events": {},
      "links": {
        "library_mp": "0x8b4c017770d5822830303ce16d765a67f070a1eb"
      },
      "address": "0x5b630a547bf18979e039a6e844ac7f6f3151eb86",
      "transactionHash": "0x0fec382568099e6a87f5d8a60dcc3ba21d7356f285d81fa6726dc483c2d01b3b"
    },
    "1534720108603": {
      "events": {},
      "links": {
        "library_mp": "0x4e588151cb42e236f404d74e252d397bbfb71916"
      },
      "address": "0xcbff68b9426ed080b0b29b4cae9930f6ca3b8f0e",
      "transactionHash": "0x95c191903d706dfc56bf434d1d610a3e504443c66e9b668824fcb03d75d77fe1"
    },
    "1534720742795": {
      "events": {},
      "links": {
        "library_mp": "0x8b4c017770d5822830303ce16d765a67f070a1eb"
      },
      "address": "0x5b630a547bf18979e039a6e844ac7f6f3151eb86",
      "transactionHash": "0xb21188aaf205362af5ade7753ffc9a274bed8289d7c8ffcf35313bbc48b0b34e"
    },
    "1534721213975": {
      "events": {},
      "links": {
        "library_mp": "0xf92db85119bd76d2e49e731b036a8cc04955335a"
      },
      "address": "0xffb3e37a9e53fd83a0ff8681d899849a982154ef",
      "transactionHash": "0xaad8cd50116d8100282ac38cd85a4ed8efb5a4c44dffdbdb7ad942db342e2dfb"
    },
    "1534734704018": {
      "events": {},
      "links": {
        "library_mp": "0x049b1406289c61e531a1a765ae266db0692daa5c"
      },
      "address": "0x595bede2db876f6fd63b19981b8b620c5a8acf9a",
      "transactionHash": "0xe60b9b636c3cf2ea592efa19896395bef583e69310eca10fb0f01ae8e65a0361"
    },
    "1534774946362": {
      "events": {},
      "links": {
        "library_mp": "0xf10ab1f1f931b377d5f93d8e2ab451bfc519fe81"
      },
      "address": "0x93fab67cad42bd785e1f2060ec3220dfb1227dc2",
      "transactionHash": "0x0093783d6f1a7ff03670a318c651f43a20b26b89dfd88213673712b181225edc"
    },
    "1534784716992": {
      "events": {},
      "links": {
        "library_mp": "0x65038ce77b5ff487033c7070fff6a412231b8b56"
      },
      "address": "0xcc88c530789ab4145a58ff010495ba1a4820e40f",
      "transactionHash": "0x49f5b186472663cc0e1e644dff875d0f76fa20ee05ceea0e235cea494b9531bb"
    },
    "1534785147991": {
      "events": {},
      "links": {
        "library_mp": "0x65038ce77b5ff487033c7070fff6a412231b8b56"
      },
      "address": "0xcc88c530789ab4145a58ff010495ba1a4820e40f",
      "transactionHash": "0x49f5b186472663cc0e1e644dff875d0f76fa20ee05ceea0e235cea494b9531bb"
    },
    "1534805289132": {
      "events": {},
      "links": {
        "library_mp": "0x6066a1a6dc7602c49961cec0f4b4fac48adde71a"
      },
      "address": "0x5773aa1ee40b12e607ee896324bcda2e1f0c60e3",
      "transactionHash": "0xa3cb7cbc738ba69091eaab37441ff9eb1b27dca3cebcb8d59e1154c170175cb1"
    },
    "1534879398178": {
      "events": {},
      "links": {
        "library_mp": "0x389edcb31b3857e7fe53a0f16ac3738da1f25be1"
      },
      "address": "0x6cf64783e656550a1d75eb8310619c2307d58f16",
      "transactionHash": "0xebf8c0eb844ae91557286add9a8cbba81ceb9e52d41d2f9b68bfea919a073340"
    },
    "1534891771214": {
      "events": {},
      "links": {
        "library_mp": "0x8a3e118ddcf2a55203da3d46a2cc5526a9edda06"
      },
      "address": "0xada3b7d10084b9e1c5c6569e2ebe8e08d6c4814e",
      "transactionHash": "0x4d8da9b6a58db54d7b5feb7ef54a465da98adb5963e29d185482200655b406f3"
    },
    "1534892616366": {
      "events": {},
      "links": {
        "library_mp": "0x8a3e118ddcf2a55203da3d46a2cc5526a9edda06"
      },
      "address": "0xada3b7d10084b9e1c5c6569e2ebe8e08d6c4814e",
      "transactionHash": "0x4d8da9b6a58db54d7b5feb7ef54a465da98adb5963e29d185482200655b406f3"
    },
    "1534893670331": {
      "events": {},
      "links": {
        "library_mp": "0x3241d6597345276d4f11a726fe074b0587a91d6b"
      },
      "address": "0xde41861ca5355ff103b0983440dda7c887e0a4c6",
      "transactionHash": "0x9e927e05752aae8b04f112123fd9346a253b0295802287af7956e28b966734b3"
    },
    "1534912894841": {
      "events": {},
      "links": {
        "library_mp": "0x3241d6597345276d4f11a726fe074b0587a91d6b"
      },
      "address": "0xde41861ca5355ff103b0983440dda7c887e0a4c6",
      "transactionHash": "0x9e927e05752aae8b04f112123fd9346a253b0295802287af7956e28b966734b3"
    },
    "1534991438659": {
      "events": {},
      "links": {
        "library_mp": "0x5fb39d13b5dad0caacb5ad556d6abc534b892d61"
      },
      "address": "0x27ae685fa863e91205f9cee84e337dfb2ba951d2",
      "transactionHash": "0xb93b1288f9e558dfde38ed5205cb8749c08ed2a6372cdbd5d49921d3cd11ceaf"
    },
    "1535034864131": {
      "events": {},
      "links": {
        "library_mp": "0xbcbdf523156c7558f08e8fe0ea49828a6a6d8898"
      },
      "address": "0x36fb9e460d51adc3d39e23f30a09d005a24565b5",
      "transactionHash": "0x68c12abb416c55a82305ecbabd7e86e3a6c80901c51240b2012ba2868f658868"
    },
    "1535066149479": {
      "events": {},
      "links": {
        "library_mp": "0x5fb39d13b5dad0caacb5ad556d6abc534b892d61"
      },
      "address": "0x27ae685fa863e91205f9cee84e337dfb2ba951d2",
      "transactionHash": "0xc6c7ead70772d30d6c7c8d297ce24fc0d7554fcb56a8c6c0773f9c286ce2727d"
    },
    "1535073513617": {
      "events": {},
      "links": {
        "library_mp": "0x0ac53f46f79631640ddf9d59eca6d18aee65f17a"
      },
      "address": "0xe827bfc79b0bed31948a8ce8205037bbe381d345",
      "transactionHash": "0xdf77c127484bdfcc8edfe2da0d51b7c343d6087216f39a8192605ee071b40ac5"
    },
    "1535078756010": {
      "events": {},
      "links": {
        "library_mp": "0x5fb39d13b5dad0caacb5ad556d6abc534b892d61"
      },
      "address": "0x27ae685fa863e91205f9cee84e337dfb2ba951d2",
      "transactionHash": "0xb4d87f44fe4bed4de009e9313653c9009a10ca7098816fab873db417f3c583f3"
    },
    "1535118698695": {
      "events": {},
      "links": {
        "library_mp": "0xbcbdf523156c7558f08e8fe0ea49828a6a6d8898"
      },
      "address": "0x36fb9e460d51adc3d39e23f30a09d005a24565b5",
      "transactionHash": "0x0dfbab6d48307382a4ec5e0b920a4de4cfd832c664c1fb23cf5bc64e70df2462"
    },
    "1535123804803": {
      "events": {},
      "links": {
        "library_mp": "0x2bc1e933d5848faf389fcf613a41337de0746b30"
      },
      "address": "0x515329395eb815bff17566af5cfa00add0a80eb5",
      "transactionHash": "0xf37de3ce3e5b71755ec6f54cbdb4d9f487a85dbbcfd7de0cb8ffb0790367dc55"
    },
    "1535205168080": {
      "events": {},
      "links": {
        "library_mp": "0x42476c764e5ddb05f604002ebaaf73710f28064e"
      },
      "address": "0x0ce7c20a704ca9ff28bce3a12e735190a6b58a59",
      "transactionHash": "0x99e1d35b62bd11b00d63cd43aab9c9415496fc5461ef72e5ad6b1a75a181a802"
    },
    "1535229823584": {
      "events": {},
      "links": {
        "library_mp": "0x8addd6c56ab8a93428eb24a723e3e18b0b5570ac"
      },
      "address": "0xe4181421f3409c3e6d0468ea723743343523867f",
      "transactionHash": "0xf805fdca231e9a7e2d48632f792ec5fc470c268461078b72909c03658ab610fc"
    },
    "1535299514912": {
      "events": {},
      "links": {
        "library_mp": "0x9d720a3f94666abb351e68aedd6c096014832024"
      },
      "address": "0xfe1149edea25d28c3b9a340aafe28df1ea5860df",
      "transactionHash": "0x588955ccfca0f2874619e75a1de75232bdf0a665cde4bb362cd299937b04189d"
    },
    "1535330601258": {
      "events": {},
      "links": {
        "library_mp": "0x822dbb16a7091667035ac2ee29bb17312b249f9f"
      },
      "address": "0xa13e98e915d4a72e5d2bdbe630b8bc841c271c2e",
      "transactionHash": "0xec40e388d1cf74c4a39e3597226928dc3fb0eb0992bd9b78f504b882667507f6"
    },
    "1535408712611": {
      "events": {},
      "links": {
        "library_mp": "0x4b2487c5d942fd53f773d0cfca6d4e1a9eeb11c6"
      },
      "address": "0x7ce3a68442b8b3dafef5a6fc7e9d4789fc7b3468",
      "transactionHash": "0x7b4dd30307b0a181c591bc98f8a0fa75bdfeec1ae3a79c7aa5ed45a925ab7f91"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-27T22:32:14.127Z"
}